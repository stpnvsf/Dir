@model Dir.Dir

<div class="container" id="model">

    <div class="row align-items-center">
        <div class="col-sm-4">
            <h3>@Html.DisplayFor(model => model.Name)</h3>
            <p style="opacity: 0.5;">Size: @Html.DisplayFor(model => model.Size) kb</p>
        </div>
        <div class="col-sm-2">
            <div class="btn-group" role="group" aria-label="Basic outlined example">
                <button type="button" class="btn btn-outline-primary"><span class="e-icons e-chevron-left"></span></button>
                <button type="button" class="btn btn-outline-primary"><span class="e-icons e-chevron-right"></span></button>
            </div>
        </div>
    </div>

    <ul class="nav nav-tabs" id="tabs">
        <li class="nav-item">
            <a class="nav-link active" href="#frequency">Frequency of each file type</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#average">Average size of each file type</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="#hierarchy">Subdirectories and Files</a>
        </li>
    </ul>

    <div class="tab-content">

        <div class="tab-pane fade show active" id="frequency">
            <table class="table">
                @foreach (var item in Model.FrequencyByType)
                {
                    <tr>
                        <td>@item.Key</td>
                        <td>@item.Value</td>
                    </tr>
                }
            </table>
        </div>
        <div class="tab-pane fade" id="average">
            <table class="table">
                @foreach (var item in Model.AverageSize)
                {
                    <tr>
                        <td>@item.Key</td>
                        <td>@item.Value kb</td>
                    </tr>
                }
            </table>
        </div>
        <div class="tab-pane fade" id="hierarchy">
            @{
                BuildHierarchy(Model);
            }
        </div>
    </div>
</div>

@{
    void BuildHierarchy(Dir.Dir dir)
    {
        if (dir.Subdirectories.Any())
        {
            <ul class="list-group" style="padding-left: 1rem;">
                @foreach (Dir.Dir subdir in dir.Subdirectories)
                {
                    <li class="list-group-item list-group-item-action" data-item="subdir" data-value="@subdir.Path" style="cursor: pointer;">
                        <span class="e-icons e-folder"></span>  @subdir.Name
                    </li>
                    BuildHierarchy(subdir);
                }
            </ul>
        }
        if (dir.Files.Any())
        {
            <ul class="list-group" style="padding-left: 1rem;">
                @foreach (Dir.File file in dir.Files)
                {
                    <li class="list-group-item">
                        <span class="e-icons e-file"></span> @file.Name
                    </li>
                }
            </ul>
        }
    }
}

<script type="text/javascript">

    $('#tabs a').click(function(e){
      e.preventDefault();
      $(this).tab('show');
    });

    $("li[data-item='subdir']").click(function(){
        var path = $(this).attr("data-value");
        $('#input').val(path);

        $.ajax({
            url: '@Url.Action("Directory", "Directory")',
            type: 'GET',
            cache: false,
            data: { 'path': path },
            success: function (response) {
                $("#model").html(response);
            },
            error: function () {
                console.log("error");
            }
        });
      });

</script>
